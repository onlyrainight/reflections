How did viewing a diff between two versions of a file help you see the bug that was introduced?

    Let us work more effeciently.
    We don't have to waste time checking bug line by line.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    We can quickly check which part has been updated on what time.
    Also, we can compare two version of the file and thinking about which one is better and why?

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

    Pros: 
    	We can commit when we did some logical change of the projcet so that it would be easier to find and compare which part we've changed afterwards.
    Cons:
    	I think I'll wish haveing automatically save whenever my computer suddenly crash.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    Because some files relate to each others, it would be better to commit together to see which part we changed and what its influeces is.

How can you use the commands git log and git diff to view the history of files?

    Enter "git log":
        To see how the different files' versions are changed.
    Enter "git diff id1 id2":
        To see the detail of the change between id1 & id2.

How might using version control make you more confident to make changes that could break something?

    We can commit a version after making some changes.
    If we did something wrong, we could checkout the version we haven't done it and then change it anytime.

Now that you have your workspace set up, what do you want to try using Git for?

    Try to do my first app!